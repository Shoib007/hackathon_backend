# Generated by Django 4.2.7 on 2023-12-06 13:44

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GradeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(blank=True, choices=[('Grade1', 'Grade1'), ('Grade2', 'Grade2'), ('Grade3', 'Grade3'), ('Grade4', 'Grade4'), ('Grade5', 'Grade5'), ('Grade6', 'Grade6'), ('Grade7', 'Grade7'), ('Grade8', 'Grade8'), ('Grade9', 'Grade9'), ('Grade10', 'Grade10'), ('Grade11', 'Grade11'), ('Grade12', 'Grade12')], max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(blank=True, default='Question Title', max_length=100)),
                ('question', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('erp_number', models.CharField(max_length=15, unique=True)),
                ('grade', models.CharField(blank=True, choices=[('Grade1', 'Grade1'), ('Grade2', 'Grade2'), ('Grade3', 'Grade3'), ('Grade4', 'Grade4'), ('Grade5', 'Grade5'), ('Grade6', 'Grade6'), ('Grade7', 'Grade7'), ('Grade8', 'Grade8'), ('Grade9', 'Grade9'), ('Grade10', 'Grade10'), ('Grade11', 'Grade11'), ('Grade12', 'Grade12')], max_length=10, null=True)),
                ('section', models.CharField(blank=True, choices=[('SECTION A', 'SECTION_A'), ('SECTION B', 'SECTION_B'), ('SECTION C', 'SECTION_C'), ('SECTION D', 'SECTION_D'), ('SECTION E', 'SECTION_E')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContestModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.UUID('90d7e589-cb8c-4e07-b90f-f774b901a822'), editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(default='Contest Title', max_length=100)),
                ('grade', models.ManyToManyField(to='Account.grademodel')),
                ('question', models.ManyToManyField(to='Account.questionmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
